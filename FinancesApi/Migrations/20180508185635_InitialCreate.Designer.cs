// <auto-generated />
using System;
using FinancesApi.Configirations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Microsoft.EntityFrameworkCore.Migrations;

namespace FinancesApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20180508185635_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-preview2-30571")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FinancesApi.Entities.Detail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Details");
                });

            modelBuilder.Entity("FinancesApi.Entities.ExpenseDate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<Guid>("RegisterId");

                    b.HasKey("Id");

                    b.HasIndex("RegisterId", "Date")
                        .IsUnique();

                    b.ToTable("ExpensesDate");
                });

            modelBuilder.Entity("FinancesApi.Entities.ExpenseDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("DetailId");

                    b.Property<Guid>("ExpenseDateId");

                    b.Property<bool>("Paid");

                    b.Property<double>("Value");

                    b.HasKey("Id");

                    b.HasIndex("DetailId");

                    b.HasIndex("ExpenseDateId", "DetailId")
                        .IsUnique();

                    b.ToTable("ExpensesDetails");
                });

            modelBuilder.Entity("FinancesApi.Entities.IncomeDate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<Guid>("RegisterId");

                    b.Property<double?>("Value");

                    b.HasKey("Id");

                    b.HasIndex("RegisterId", "Date")
                        .IsUnique();

                    b.ToTable("EntriesDate");
                });

            modelBuilder.Entity("FinancesApi.Entities.Register", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Budget");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Name", "Budget")
                        .IsUnique();

                    b.ToTable("Registers");
                });

            modelBuilder.Entity("FinancesApi.Entities.ExpenseDate", b =>
                {
                    b.HasOne("FinancesApi.Entities.Register", "Register")
                        .WithMany()
                        .HasForeignKey("RegisterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FinancesApi.Entities.ExpenseDetails", b =>
                {
                    b.HasOne("FinancesApi.Entities.Detail", "Detail")
                        .WithMany()
                        .HasForeignKey("DetailId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FinancesApi.Entities.ExpenseDate")
                        .WithMany("ExpenseDetails")
                        .HasForeignKey("ExpenseDateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FinancesApi.Entities.IncomeDate", b =>
                {
                    b.HasOne("FinancesApi.Entities.Register", "Register")
                        .WithMany()
                        .HasForeignKey("RegisterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
